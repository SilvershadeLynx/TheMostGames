# Задание 2
Имеется несколько файлов, содержащих перевод текстовых строк с английского языка на другие языки (по одному целевому языку на файл). Пример файла – batch07-de.loc.
Имена файлов состоят из собственно имени файла и суффикса, который идёт через дефис и соответствует коду целевого языка (ru, it, es и т.п.). Расширение всех файлов – loc.
Задача «А». Свести содержимое всех упомянутых файлов в один файл формата Excel, чтобы все строки были в одной таблице в удобном для восприятия виде.
Задача «Б». Свести содержимое всех упомянутых файлов в один файл формата Excel, чтобы все строки было там удобно редактировать. После окончания редактуры вставить изменённый текст обратно в исходные файлы.
Опишите (словами, писать код нет необходимости), как вы будете решать задачи «А» и «Б». Будьте кратки, но постарайтесь указать все существенные детали.

# Решение
Задача А: написать парсер, который преобразует исходный JSON в CSV файл, который легко читается Excel`ем. У нас имеются ключи для каждой строки, по которым можно сопоставить строки разных языков посредством LINQ в C#/запросом в базе SQL/запросом в Access. Т.е. мы можем каждый файл свести к табличному виду, затем к результирующей таблице с группировкой по ключу и её уже вывести в Excel. Основной нюанс кроется в структуре файла. На примере batch07-de.loc – файл имеет несколько подуровней (Subnamespaces). Либо мы разделяем каждый подуровень на отдельную таблицу, либо придется делать идентификаторы подуровней
Задача Б: часть задачи уже решена в задаче А (сведение к удобочитаемому виду. Что удобно читать - удобно и редактировать). Обратная задача по вставке данных снова усложняется структурой файла. Если мы сохраняем полную структуру с подуровнями – то можем просто перезаписывать изначальный файл, внося таким образом изменения. Если разбиваем на части – получаем доступ по индексам и перезаписываем точечно значения строк. 
Важно также не потерять в процессе названия колонок (они должны соответствовать исходным файлам) для дальнейшей вставки значений обратно/создания новых файлов
Предполагается что все файлы имеют одинаковую структуру. Если нет – нужно предусмотреть варианты приведения файлов к одной структуре, чтобы их можно было пакетно обрабатывать.

В теории можно средствами VBA получать данные из файла в Excel, записывать в буферную таблицу/таблицы, которые связаны с Access, где есть форма с кнопкой «сгенерировать результирующую таблицу». Access по индексам сопоставляет строки, возвращает в Excel, где можно просматривать/редактировать строки и в дальнейшем вернуть обратно в изначальные файлы
